setScriptDescription('''demo robust peak detection function.  See
https://stackoverflow.com/questions/22583391/peak-signal-detection-in-realtime-timeseries-data''')

setLayoutOverplot(2)

y = dataset( "1 1 1.1 1 0.9 1 1 1.1 1 0.9 1 1.1 1 1 0.9 1 1 1.1 1 1 1 1 1.1 0.9 1 1.1 1 1 0.9 " 
     "1 1.1 1 1 1.1 1 0.8 0.9 1 1.2 0.9 1 1 1.1 1.2 1 1.5 1 3 2 5 3 2 1 1 1 0.9 1 1 " 
     "3 2.6 4 3 3.2 2 1 1 0.8 4 4 2 2.5 1 1 1".split() )

plot(y,symbolSize=10,symbolFill='outline',ylog=False )

signals=zeros(len(y))
filteredY= copy(y)
lag=5
threshold=3.5
influence=0.5

avgFilter= zeros(len(y))
stdFilter= zeros(len(y))

avgFilter[lag]= mean( y[0:lag] )
stdFilter[lag]= stddev( y[0:lag] )

n=len(y)

for i in xrange( lag, n ):
   z_score= abs( y[i]-avgFilter[i-1] ) / stdFilter[i-1]
   if z_score>threshold:
       if y[i]>avgFilter[i-1]:
           signals[i]= 1
       else:
           signals[i]= -1
       filteredY[i]=  influence*y[i] + (1-influence)*filteredY[i-1];
   else:
       signals[i]=0
       filteredY[i]= y[i]
   avgFilter[i]= mean(filteredY[i-lag+1:i+1]);
   stdFilter[i]= stddev(filteredY[i-lag+1:i+1]);
       
plot(1,avgFilter)
