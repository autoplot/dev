from javax.imageio import ImageIO
from java.awt.image import BufferedImage
from org.das2.util import ImageUtil

setScriptDescription('Make thumbnails')
resourceURI= getParam( 'resourceURI', 'https://jfaden.net/~jbf/autoplot/pngwalks/2022/20221102/product_$Y$m$d-$H.png', 'example file to load' )

thumbSize= getParam( 'thumbSize', 200, 'nominal size to target thumbnails, 0 means no resize' )

timerange='1900 to 2100' 

ncol= getParam( 'ncol', 5, 'Number of columns', { 'examples':[ 5,6,7,8,9,10] } )
output= getParam( 'output', '/tmp/ap/output.png', 'Output file png' )

from org.das2.fsm import FileStorageModel
from org.das2.util.filesystem import FileSystem
i= FileStorageModel.splitIndex( resourceURI )

root= resourceURI[0:i]      # the static part of the name
template= resourceURI[i:]   # the templated part of the name

fs= FileSystem.create( root )
fsm= FileStorageModel.create( fs, template )

names= fsm.getNamesFor( DatumRangeUtil.parseTimeRange(timerange) )

im= ImageIO.read( getFile( root + names[0] ))
if thumbSize>0:
    im= ImageUtil.getScaledInstance(im, thumbSize)
    
nrow= int( ceil( len(names)/ncol ) )
print nrow, ncol

img = BufferedImage( ncol * im.width, nrow * im.height, BufferedImage.TYPE_INT_RGB )
g= img.createGraphics()

ii=0
nn= len(names)
print nn, len(names)
for irow in range(0,nrow):
    if i==nn: break
    for icol in range(0,ncol):
        if i==nn: break
        im1= ImageIO.read( getFile( root + names[i] ))
        if thumbSize>0:
            im1= ImageUtil.getScaledInstance(im1, thumbSize)
        g.drawImage(im1, icol * im.width, irow * im.height, None )
        i=i+1

writeToPng( img, output,None )
showMessageDialog('Wrote to '+output)

