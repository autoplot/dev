from java.lang import StringBuilder
from java.awt import FlowLayout,Dimension
from javax.swing import JPanel,BoxLayout,JOptionPane,JCheckBox,JScrollPane,JTextArea,Box,JLabel
from java.util import LinkedHashMap,ArrayList
from javax.xml.xpath import XPathFactory,XPathConstants
from org.xml.sax import InputSource
from javax.xml.parsers import DocumentBuilderFactory
from java.io import StringReader
from org.das2.util import FileUtil

setScriptDescription('''Build a prototype parameters GUI for Das2Server sources.  See
/var/www/das2srv/datasets_jupiter/Juno/WAV/Housekeeping.dsdf on jupiter''')

urls= [ 'https://jupiter.physics.uiowa.edu/das/server?dataset=Juno/Ephemeris/Jovicentric&server=dsdf', 
        'file:/home/jbf/tmp/20231115/housekeeping.dsdf',
        'file:/home/jbf/tmp/20231115/otherparams.dsdf' ]
url= getParam( 'dsdf', urls[1], 'URL of dsdf', urls )

paramz= getParam('params', '3.6U -12.0 -13U   ', 'parameters string to parse' )

def readXML(xmlsrc):
    '''Read the Das2Server container for DSDF'''
    domFactory = DocumentBuilderFactory.newInstance()
    domFactory.setNamespaceAware(True)
    builder = domFactory.newDocumentBuilder(); 
    inputsrc = InputSource(StringReader(xmlsrc));
    doc = builder.parse(inputsrc);
    xp= XPathFactory.newInstance().newXPath()
    nn=xp.evaluate( '//properties',doc,XPathConstants.NODE)
    
    mm= LinkedHashMap()
    ll= ArrayList(100)
    for i in xrange(100):
        ll.add(i,'')
        
    aa= nn.getAttributes()
    for i in xrange(aa.length):
        itm=aa.item(i)
        if ( itm.nodeName.startswith('param_') ):
            idx= int(itm.nodeName[6:])
            ll.set( idx,itm.nodeValue )
            print 'found ', idx, itm.nodeValue
    return ll
    
def readDsdf(dsdfsrc):
    '''Read the DSDF source file'''
    ll= ArrayList(100)
    for i in xrange(100):
        ll.add(i,'')
        
    for line in dsdfsrc.splitlines():
        print line
        if ( line.startswith('param_') ):
            ieq= line.find('=')
            idx= int(line[0:ieq][6:])
            vv= line[ieq+1:].strip()
            if vv[0]=='\'' and vv[-1]=='\'':
                vv= vv[1:-1]  
            ll.set( idx,vv )
            
    return ll
        
ff= downloadResourceAsTempFile( URL(url),monitor )
ss= FileUtil.readFileToString(ff)

if ( ss[0:4]=='[00]' ):
    print 'reading xml within '+url
    ll= readXML(ss[10:])
else:
    print 'reading dsdf '+url
    ll= readDsdf(ss)

print ll

paramsArr= paramz.split()

panel= JPanel()
panel.layout= BoxLayout(panel, BoxLayout.Y_AXIS )

cc= ArrayList(101)
tt= ArrayList(101)  # types
for i in xrange(101):
   cc.add(i,None)
   tt.add(i,None)
    
extra=False   
for i in xrange(100):
    itm= ll.get(i)

    if len(itm)>0:
        itm= itm.strip()
        
        ss= itm.split('|')
        narg= len(ss)
        c= None
        if narg==1:
            ss[0]=ss[0].strip()
            c= JCheckBox(text=ss[0])
            try:
                idx= paramsArr.index(ss[0])
                c.selected=True
                paramsArr.remove(ss[0])
            except:
                print 'param not found: '+ss[0]
            tt[i]= 'JCheckBox'
        elif narg==2:
            ss[1]=ss[1].strip()
            ss[0]=ss[0].strip()
            c= JCheckBox(text=ss[0]+': '+ss[1])
            try:
                idx= paramsArr.index(ss[0])
                c.selected=True
                paramsArr.remove(ss[0])
            except:
                import traceback
                traceback.print_exc()
                print 'param not found: '+ss[0]
            tt[i]= 'JCheckBox'
        else:
            
            extra=True
                   
        if ( c!=None ):
            panel.add(c)
            cc[i]= c
            
if extra:
    panel.add(JLabel('Text stuff'))
    c= JTextArea(text='',rows=4)
    panel.add(c)
    cc[100]= c
panel.add(Box.createGlue())
        
pp= JScrollPane(panel)
pp.maximumSize= Dimension(600,800)
pp.preferredSize= Dimension(600,800)
JOptionPane.showMessageDialog(getApplication(),pp)

delim=' '
ss= StringBuilder()
for i in xrange(100):
    if cc[i]==None:
        pass
    elif tt[i]=='JCheckBox':
        if cc[i].selected:
            txt= cc[i].text
            i= txt.find(': ')
            if i>-1: 
                txt= txt[0:i]
            ss.append(txt)
            ss.append(delim)
if cc[100]!=None:
    ss.append(delim)
    txt= cc[100].text.replace('\n',delim)
    txt= txt.strip()
    ss.append(txt)
    
print '-----'
print ss.toString()
print '-----'
