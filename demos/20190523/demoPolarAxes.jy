from org.das2.graph import Painter
from org.das2.util import GrannyTextRenderer
from java.awt import BasicStroke
from org.das2.graph import DasDevicePosition

# draw the polar axes
class AxisPainter( Painter ):
    def paint( self,g ):
        g.setColor( Color.GRAY )
        for r in [ 90, 80, 70, 60, 50, 40 ]:
            g= g.create()
            s= BasicStroke( 0.5,BasicStroke.CAP_BUTT,BasicStroke.JOIN_MITER,10.0, [2.,2.], 0. )
            g.setStroke(s)
            g.setClip( DasDevicePosition.toRectangle( p.getRow(), p.getColumn() ) )
            xmin= p.XAxis.transform( datum( r-90 ) )
            ymin= p.YAxis.transform( datum( 90-r ) )
            xmax= p.XAxis.transform( datum( 90-r ) )
            ymax= p.YAxis.transform( datum( r-90 ) )
            g.drawOval( int( xmin ), int( ymin ), int( xmax-xmin ), int( ymax-ymin ) )
            m='%d'
            if ( pole=='S' ): m='-%d'
            if ( r==70 or r==50 ): g.drawString( m%r, p.XAxis.transform( datum( (r-90)*cos(TAU/8) ) )-4, p.YAxis.transform( datum( (90-r)*cos(TAU/8) ) )-4 )
        x0= p.XAxis.transform( datum(0) )
        y0= p.YAxis.transform( datum(0) ) 
        for r in [ 0,1,2,3,4,5,6,7,8,9,10,11 ]:
            t= TAU * r / 12.
            x= p.XAxis.transform( datum( cos( t ) * ( 90-40 ) ) )
            y= p.YAxis.transform( datum( sin( t ) * ( 90-40 ) ) )  
            g.drawLine(int( x0), int(y0),int( x), int(y) ) 
        g.drawString( '270', p.XAxis.transform( datum( -50 ) ), p.YAxis.transform( datum( 0 ) ) )
        g.drawString( '90', p.XAxis.transform( datum(50) ), p.YAxis.transform( datum( 0 ) ) )
        if ( flip=='T' or pole=='N' ):
            g.drawString( '0', p.XAxis.transform( datum(0) ), p.YAxis.transform( datum( 50 ) ) )
            g.drawString( '180', p.XAxis.transform( datum(0) ), p.YAxis.transform( datum( -50 ) ) )
        else:
            g.drawString( '0', p.XAxis.transform( datum(0) ), p.YAxis.transform( datum( -50 ) ) )
            g.drawString( '180', p.XAxis.transform( datum(0) ), p.YAxis.transform( datum( 50 ) ) )


dom.canvases[0].controller.dasCanvas.removeBottomDecorators()
dom.canvases[0].controller.dasCanvas.addBottomDecorator( AxisPainter() )
