from java.util import HashMap
from org.autoplot.dom import DomOps
from org.das2.event import DataPointSelectionListener,DataPointSelectorMouseModule
setScriptLabel('Double Slice')
setScriptDescription('''Double Slice will slice either of two spectrograms,
drawing the slice on a second Autoplot window.  The two slices have 
separate plots which are on top of one another, so the xaxis ranges can 
be adjusted separately.
''')

reset()

if ( len(dom.plots)!=2 ):
    plot( 0, 'vap+inline:randn(100,100)+distance(100,100,60,60,10,30)', title='Data 1' )
    plot( 1, 'vap+inline:randn(100,100)+distance(100,100,60,60,30,10)', title='Data 2' )
        
    #raise Exception('only two plots')

rang= extent( dom.plotElements[0].controller.dataSet )
rang= extent( dom.plotElements[1].controller.dataSet, rang )
rang= datumRange([-1,11])
print 'rang', rang

orig= getApplication()
slicer= newApplication('doubleSlicer')
setApplication(slicer)
setLayoutOverplot(2)

setApplication(orig)

def doubleSlice(which,evtx):
    global rang
    setApplication(orig)
    ds= dom.plotElements[which].controller.dataSet
    
    setApplication(slicer)
    print 'slice2', rang
    try:
        plot( which, slice0( ds, dataset( evtx) ), yrange=rang, color=['red','blue'][which], legendLabel=dom.plots[which].title ) # rang
    except:
        print 'exception, probably index out of bounds'
    setApplication(orig)
        
from org.das2.event import AbstractDragRenderer

class MyDragRenderer( AbstractDragRenderer ):
    def renderDrag( self, g, p1, p2 ):
        g.drawLine( p2.x, 0, p2.x, dom.canvases[0].height )
    #def isUpdatingSelection( self ):
    #    return True

class MyDataPointSelectionListener0(DataPointSelectionListener):
    def dataPointSelected(self,evt):
        doubleSlice( 0, evt.x )
    
class MyDataPointSelectionListener1(DataPointSelectionListener):
    def dataPointSelected(self,evt):
        doubleSlice( 1, evt.x )

mm= DataPointSelectorMouseModule( dom.plots[0].controller.dasPlot,None,MyDragRenderer(),'double slice' )
mm.addDataPointSelectionListener(MyDataPointSelectionListener0())
dom.plots[0].controller.dasPlot.getDasMouseInputAdapter().setPrimaryModule(mm)

mm= DataPointSelectorMouseModule( dom.plots[1].controller.dasPlot,None,MyDragRenderer(),'double slice' )
mm.addDataPointSelectionListener(MyDataPointSelectionListener1())
dom.plots[1].controller.dasPlot.getDasMouseInputAdapter().setPrimaryModule(mm)
