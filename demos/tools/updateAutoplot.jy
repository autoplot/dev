from java.util.regex import Pattern
setScriptTitle('Update Autoplot')
setScriptDescription('''Download and install a new version of the Autoplot single-jar release''')

version= getParam( 'version', 'devel', 'Autoplot version number', { 'examples':[ 'latest', 'devel', '20200202a' ] } )

from java.lang import System
isWindows= System.getProperty( 'os.name' ).startswith('Windows')

# find the physical Jar file for Autoplot
from org.autoplot import AutoplotUI
r1= AutoplotUI.getClassLoader().getResource("org/autoplot/AutoplotUI.class")
if ( r1==None ):
    r1= AutoplotUI.getClassLoader().getResource("org/virbo/autoplot/AutoplotUI.class")
resource= r1.toString()
if ( resource.startswith('jar:file:') ) :
    i2= resource.index('!')
    jarfile= resource[9:i2]
    print 'current jar file: ' + jarfile
else:
    raise Exception('unable to update jar file, autoplot.jar not found.')

from java.awt import GridLayout,BorderLayout,Dimension
from javax.swing import JPanel, JLabel, JTextField, JFormattedTextField,ImageIcon, JEditorPane,JScrollPane

# we need to identify the original file which links to the jar we are using.
from java.nio.file import Path,Paths,Files
from java.io import File
autoplotDir= File(jarfile).getParentFile()

ff= autoplotDir.listFiles()
jarlink= jarfile
print 'autoplotdir: '+str(autoplotDir)
for f in ff:
    p= Paths.get(f.toURI())
    if ( Files.isSymbolicLink(p) ):
        rp= p.toRealPath([])
        print 'does the realpath '+str(rp) + " link to " + str( File(jarfile) ) + " ?"
        if ( rp.toFile().equals(File(jarfile)) ):
            print 'found it: '+str(f)+' links to ' +jarfile
            jarlink= f.toString()
            break

newjarfile= File( autoplotDir, 'autoplot.jar.'+version )

gl= GridLayout( 4, 2 )
gl.vgap= 10

panel= JPanel()
panel.setLayout( gl )

panel.add( JLabel('Current Jar:') )
ntf=JTextField(jarfile)
ntf.setEditable(False)
panel.add( ntf )

panel.add( JLabel('Download:') )
ntf=JTextField('https://das2.org/autoplot/jnlp/'+version+'/autoplot.jar')
ntf.setEditable(False)
panel.add( ntf )

panel.add( JLabel('New Jar:') )
ntf=JTextField(str(newjarfile))
ntf.setEditable(False)
panel.add( ntf )

panel.add( JLabel('Update Link:') )
ntf=JTextField(jarlink)
ntf.setEditable(False)
panel.add( ntf )

#imgScreen = ImageIcon(URL('http://autoplot.org/jnlp/'+version+'/screen.png'))
#label= JLabel('')
#label.setIcon(imgScreen)

website = JEditorPane('http://autoplot.org/jnlp/'+version)
website= JScrollPane(website)
website.preferredSize= website.maximumSize= Dimension(1040,320)

fpanel= JPanel(BorderLayout() )
fpanel.add(panel, BorderLayout.CENTER)
fpanel.add( website, BorderLayout.SOUTH )

from java.io import File
from java.nio.file import Files, FileSystems,Paths    
from javax.swing import JOptionPane

pp= Pattern.compile('autoplot.*\.jar')
m= pp.matcher(jarfile)

if ( m.find() ):    
    response= JOptionPane.showConfirmDialog(getViewWindow(), fpanel, 'update Autoplot', JOptionPane.OK_CANCEL_OPTION )

    if ( response==JOptionPane.OK_OPTION ):
        
        tempfile= downloadResourceAsTempFile(URL('https://das2.org/autoplot/jnlp/%s/autoplot.jar' % version ),3600,monitor)
        
        if ( not tempfile.renameTo( newjarfile ) ):
            error='Unable to move downloaded file to '+ str(newjarfile)
        else:
            if ( not newjarfile.setExecutable(True,False) ):
                error= 'Cannot set executable: '+str(newjarfile)
            else:
                if ( not File(jarlink).delete() ):
                    error='Unable to delete link: '+jarlink
                else:
                    if ( isWindows ):
                        Files.createLink( Paths.get(jarlink,[]),Paths.get( newjarfile.toURI() ) )
                    else:
                        Files.createSymbolicLink( Paths.get(jarlink,[]),Paths.get( newjarfile.toURI() ),[])
                    error= ''
    else:
        error= 'abort'
else:
    error= 'Unable to find autoplot.jar' 
    
if ( error!='' ):
    JOptionPane.showMessageDialog(getViewWindow(),'unable to update: '+error,'update failed',JOptionPane.WARNING_MESSAGE)
elif ( error=='abort' ):
    pass
else:            
    JOptionPane.showMessageDialog(getViewWindow(),'updated to '+version+'. Restart Autoplot.','update',JOptionPane.INFORMATION_MESSAGE)
