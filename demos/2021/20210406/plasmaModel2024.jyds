from java.util import Random
setScriptDescription('''Make a fake dataset with rank 2 bins for HAPI model.  This simulates a 
sampling pattern where mode changes periodically and the pitch angles associated with
the measures vary slightly with energy as well.''')

tr= getParam( 'timerange', '2023-11-09', 'time range' )
modes= getParam( 'ens', True, 'Multiple modes', [True,False] )

drtr= datumRange(tr)

start= TimeUtil.prevMidnight(drtr.min())
stop= TimeUtil.ceil( TimeUtil.DAY,drtr.max() )

npts= int( 1440 * ceil( (stop-start)/'24hr') ) + 1
tt= linspace( start, stop, npts )

from org.das2.qds.demos import PlasmaModel
pm= PlasmaModel()

npa= 18
nen= 40

data= zeros( npts, npa, nen )
en=   zeros( npts, npa, nen )
en.putProperty( QDataSet.UNITS, Units.eV )
en.putProperty( QDataSet.LABEL, 'Energy' )
en.putProperty( QDataSet.NAME, 'Energy' )

pa= linspace( 0, 180, npa+1 )
pa= ( pa[0:npa] + pa[1:] ) / 2
pa.putProperty( QDataSet.UNITS, Units.degrees )
pa.putProperty( QDataSet.LABEL, 'Pitch Angle' )
pa.putProperty( QDataSet.NAME, 'Pitch' )

tt.putProperty( QDataSet.NAME, 'Time' )

rr= Random(5334)

paAdjust= dataset( 1 + 0.1 * sin( linspace(0,PI,npa) ) )

hrsSinceMidnight= convertUnitsTo( tt - TimeUtil.prevMidnight(drtr.min()), Units.hours )
hrsSinceMidnight= mod( hrsSinceMidnight, '24hr' )

if modes:
    nenAdjusts= zeros(len(tt))
    r= where( hrsSinceMidnight.lt('4hr') )
    nenAdjusts[r]= 1.0
    
    r= where( hrsSinceMidnight.ge('4hr').and( hrsSinceMidnight.lt('16hr') ) )
    nenAdjusts[r]= 7.0
    
    r= where( hrsSinceMidnight.ge('16hr') )
    nenAdjusts[r]= 4.0
else:
    nenAdjusts= replicate(4.0,len(tt))
    
for i in xrange(len(tt)):
    for j in xrange(nen):
        be= 10 ** ( 4.*j/nen )
        en[i,:,j]= be * paAdjust * nenAdjusts[i]
        for k in xrange(npa):
            data[i,k,j]= pm.counts( datum(en[i,k,j]), datum(pa[k]), rr )

#stop
result= link( tt, pa, en, data )
       
#data= data[-1]
print data
print data.property(QDataSet.DEPEND_1)

#plot( data )
#plot( 1, en )



