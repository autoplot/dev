setScriptTitle('Demo Pie Chart')
setScriptDescription('Demonstration renderer draws a pie chart')

from org.das2.graph import Renderer
from java.awt.geom import Arc2D

class PieRenderer( Renderer ):
    def doAutorange( self, ds ):
        xr= dataset( [ -1, 1 ] )
        yr= dataset( [ -1, 1 ] )
        bds= join(rescaleRange(xr,-0.1,1.1),rescaleRange(yr,-0.1,1.1))
        return bds
        
    def render( self, g, xaxis, yaxis ):
        ds= self.getDataSet()
        if ( ds==None ):
            raise Exception('ds is None')
        
        if ( ds.rank()!=2 ):
            raise Exception('ds.rank() should be 2')
        if ( ds.length()==0 ):
            raise Exception('ds have at least one element')
        if ( ds.length(0)!=2 and ds.length(0)!=3 ):
            raise Exception('ds should be ds[n,2] where each record is size,color,label')
        angle0=0
        colors= ds[:,1]
        
        ix= int( xaxis.transform(datum(0)) )
        iy= int( yaxis.transform(datum(0)) )
        ix10= int( xaxis.transform(datum(1)) )
        iy10= int( yaxis.transform(datum(1)) )
        rx= ix10-ix
        ry= iy-iy10
        tot= total( ds[:,0] )
        
        if ( ds.length(0)==3 ):
            labls= ds[:,2]
        else:
            labls= None
        
        for i in xrange(ds.length()):
            angle1= angle0 + ds[i,0]/tot * 360
            print angle1
            g.setColor( Color( int( colors[i] ) ) )
            arc= Arc2D.Double( ix-rx, iy-ry, rx*2, ry*2, float(angle0), float(angle1-angle0), Arc2D.PIE )
            g.fill( arc )
            if ( labls!=None ):
                g.setColor( Color.BLACK )
                la= (angle0+angle1)/2*TAU/360
                rf= 0.8 # fraction of distance to radius
                lx= ix+rf*rx*cos( la )
                ly= iy-rf*ry*sin( la )
                ls= str(labls[i])
                lw= g.fontMetrics.stringWidth(ls)
                g.drawString( str(labls[i]), int(lx-lw/2), int(ly) )            
            angle0= angle1

testdata= dataset( [ 1,1,2,2,3,2 ] )
colors= dataset( [ Color.RED.getRGB(), Color.BLUE.getRGB(), Color.PINK.getRGB(), Color.ORANGE.getRGB(), Color.GREEN.getRGB(), Color.MAGENTA.getRGB() ] )
labls= labelsDataset( [ 'one', 'two', 'three', 'four', 'five', 'six' ] )
testdata= bundle( testdata, colors, labls )

plot( testdata, renderer=PieRenderer() )
