# read DEM data
# See https://en.wikipedia.org/wiki/USGS_DEM
#
# TODO:
#   Get axis information for X and Y coordinates.  
#   The map can be rotated, so rows and columns need not correspond to East and South
#   directions.  The QDataSet data model has never represented such data as a grid.

f= getParam( 'resourceURI', 'https://dds.cr.usgs.gov/pub/data/DEM/250/P/pittsburgh-e', 'DEM file' )
fil=getFile(f,False,monitor.getSubtaskMonitor('download file'))

loc= 0
totalLength= fil.length()

from java.nio.charset import Charset
usascii= Charset.forName( 'US-ASCII' )

ds=getDataSet( 'vap+bin:%s?byteOffset=858&byteLength=6' % fil.toURI() )
loc= loc + 1024

from java.lang import Integer
ncol= Integer.parseUnsignedInt( getDataSet( 'vap+bin:%s?byteOffset=858&byteLength=6' % fil.toURI() ).collectString( usascii ).strip() )

monitor.setTaskSize( totalLength )
monitor.started()
monitor.setProgressMessage('read data')

dsb= DataSetBuilder(2,totalLength/1024,ncol)
ifield=0
dd= zeros(ncol)
while ( loc<totalLength ):
    monitor.setTaskProgress(loc)
    data= getDataSet( 'vap+bin:file:/home/jbf/Downloads/pittsburgh-e?byteOffset=%d&byteLength=1024' % loc )
    srec= data.collectString(usascii)
    ss= srec.split()
    if ( ifield==0 ):
         ss= ss[9:]
    print len(ss), ifield
    for i in xrange(len(ss)):
        dd[ifield+i]= float(ss[i])
    ifield= ifield + len(ss)
    if ( ifield==ncol ):
        dsb.nextRecord(dd)
        ifield= 0
    loc= loc + 1024
result= dsb.getDataSet()
monitor.finished()
