# read DEM data
# See https://en.wikipedia.org/wiki/USGS_DEM
#
# TODO:
#   Get axis information for X and Y coordinates.  
#   The map can be rotated, so rows and columns need not correspond to East and South
#   directions.  The QDataSet data model has never represented such data as a grid.

f= getParam( 'resourceURI', 'https://dds.cr.usgs.gov/pub/data/DEM/250/P/pittsburgh-e', 'DEM file' )
fil=getFile(f,False,monitor.getSubtaskMonitor('download file'))
u= getParam( 'units', 'ft', 'units for measurements', [ 'ft', 'm' ] )

loc= 0
totalLength= fil.length()

from java.nio.charset import Charset
usascii= Charset.forName( 'US-ASCII' )

ds=getDataSet( 'vap+bin:%s?byteOffset=0&byteLength=1024' % fil.toURI() )
loc= loc + 1024

arecord= ds.collectString(usascii)

title= arecord[0:134]

xyunits= arecord[529:535].strip()
if ( xyunits=='0' ):
    xyunits='radian'
elif ( xyunits=='1' ):
    xyunits='feet'
elif ( xyunits=='2' ):
    xyunits='meter'
elif ( xyunits=='3' ):
    xyunits='arc-second'
    
zunits= arecord[535:541].strip()
unitsMult= 1.
if ( u=='m' and zunits=='1' ):
    unitsMult= 0.3048
if ( u=='ft' and zunits=='2' ):
    unitsMult= 3.28084

def f( s ): return float( s.replace('D','E') )

eastingSW= arecord[546:570]
northinSW= arecord[570:594]
eastingNW= arecord[594:618]
northinNW= arecord[618:642]

eastingNE= arecord[642:666]
northinNE= arecord[666:690]
eastingSE= arecord[690:714]
northinSE= arecord[714:738]

minelev= arecord[738:762]
maxelev= arecord[762:786]
    
from java.lang import Integer
ncol= Integer.parseUnsignedInt( ds.trim( 858, 864 ).collectString( usascii ).strip() )

monitor.setTaskSize( totalLength )
monitor.started()
monitor.setProgressMessage('read data')

result= None

if ( eastingNE==eastingSE and eastingNW==eastingSW ):
    horizontal= dataset( [ f(eastingNW), f(eastingNE) ] )
    horizontal.putProperty( QDataSet.LABEL, 'Eastings (%{UNITS})' )
    horizontal.putProperty( QDataSet.UNITS, xyunits )
    result= join( result, horizontal )

if ( northinNE==northinNW and northinSE==northinSW ):
    vertical= dataset( [ f(  northinSE ), f( northinNE ) ] )
    vertical.putProperty( QDataSet.LABEL, 'Northings (%{UNITS})' )
    vertical.putProperty( QDataSet.UNITS, xyunits )
    result= join( result, extent( vertical ) )

#result= join( result, dataset( [ f(minelev), f(maxelev) ] ) )

result.putProperty(QDataSet.LABEL, title )
result.putProperty(QDataSet.TITLE, title )
