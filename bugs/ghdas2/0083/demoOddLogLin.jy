from org.das2.datum import LogLinDomainDivider

setScriptDescription('''Demo where LogLinDomainDivider is failing
when the mantissa step size is 2.  The bug is <pre>
4.0  6.0  8.0  10.0  30.0  50.0  70.0  90.0  100.0  
</pre> 
when it should be <pre> 
4.0  6.0  8.0  10.0  20.0  40.0  60.0  80.0  100.0   
</pre>
.

''')

significand= getParam('significand',0.5,'step within each decade',[1,2,5,0.5])

print 'significand is ', significand

ff= '%.1f'

lldd= LogLinDomainDivider.create()
if significand==2:
    lldd= lldd.coarserDivider(True)
elif significand==5:
    lldd= lldd.coarserDivider(True).coarserDivider(False)
elif significand==0.5:
    lldd= lldd.finerDivider(True)

#bb= lldd.boundaries( datum(7.5600E-18), datum(9.4E-17) )
bb= lldd.boundaries( datum(2.5), datum(218) )
for i in xrange(bb.getLength()):
    print (ff % bb.get(i)),
print ''

if significand==2 :
    print '4.0  6.0  8.0  10.0  20.0  40.0  60.0  80.0  100.0  200.0<-- it should be'
elif significand==5:
    print '5.0  10.0  50.0  100.0   <-- it should be'
elif significand==1:
    print '3.0  4.0  5.0  6.0  7.0  8.0  9.0  10.0  20.0  30.0  40.0  50.0  60.0  70.0  80.0  90.0  100.0  200.0 <-- it should be'
elif significand==0.5:
    print '2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0 9.5 10.0 15.0 20.0 25.0 30.0 35.0 40.0 45.0 50.0 55.0 60.0 65.0 70.0 75.0 80.0 85.0 90.0 95.0 100.0 ... <-- it should be'

print lldd.toString()
#plot( dataset( bb ) )
