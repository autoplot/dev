from org.das2.components import DasProgressPanel
# brute force test of editor completions.  Load in the script and attempt to get the completions at every point.

from org.autoplot.jythonsupport import JythonUtil
from java.io import FileReader
from javax.swing import JTextArea,JPanel,JFrame
from java.awt import Dimension

ss= getApplication().getScriptEditor().getText()

tc= JTextArea()
tc.minimumSize= Dimension( 500,500 )
tc.preferredSize= Dimension( 500,500 )

jf= JFrame( title='Temporarily Used To Count' )
jf.getContentPane().add(tc)
jf.pack()
jf.setVisible(True)

from org.das2.jythoncompletion import JythonCompletionTask, CompletionSupport
from org.das2.jythoncompletion.ui import CompletionImpl
from org.das2.jythoncompletion.support import CompletionProvider
tc.setText( ss )

jct= JythonCompletionTask(tc)
rs= CompletionImpl.get().createTestResultSet(None,0)

dsb= DataSetBuilder(2,100,3)

mon= DasProgressPanel.createFramed('checking completions')

def runAsync():
    for i in xrange( len(ss) ):
       if mon.cancelled: break
       tc.setCaretPosition(i)
       irow= tc.getLineOfOffset(i)
       i0= tc.getLineStartOffset(irow)
       icol= i-i0
       try:
          cc = CompletionSupport.getCompletionContext(tc)
          if ( cc!=None ):
             count= jct.doQuery( cc,rs.getResultSet() ) 
             dsb.nextRecord([irow+1,icol,count])
       except:
           import traceback
           traceback.print_exc()
           dsb.nextRecord([irow+1,icol,-1])
       mon.setTaskProgress(i)
       mon.label='Line %d' % (irow+1)
    mon.finished()
    jf.setVisible(False)
    old= getApplication()
    setApplication( newApplication('completions') )
    reset()
    plot( grid( dsb.getDataSet() ), renderType='digital>fontSize=0.5em&format=%d&fillLabel=' )
    setApplication(old)

mon.setTaskSize( len(ss) )
mon.started()
invokeLater( runAsync )
<<<<<<< HEAD
while not monitor.isFinished():
    sleep(200)
=======

>>>>>>> 346f00f0803d438620213626acf11363c00bafbe
    
