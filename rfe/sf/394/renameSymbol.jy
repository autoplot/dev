setScriptLabel('Rename Variable')
setScriptDescription('Rename a variable in the script editor.')

print '==== v0728 ===='
from javax.swing import JOptionPane,BoxLayout
from javax.swing import JPanel,JLabel,JTextField,BoxLayout
from java.awt import FlowLayout,GridLayout,BorderLayout
from org.autoplot.jythonsupport.ui import EditorAnnotationsSupport

editor= getApplication().getScriptPanel().getEditorPanel()

script= editor.getText()
var= editor.getSelectedText()

if var==None or var.length()==0:
    var= EditorAnnotationsSupport.getSymbolAt( editor, editor.getCaretPosition() )
    
panel1= JPanel()
panel1.setLayout( FlowLayout() )

panel= JPanel()
gl= GridLayout(2,2)
panel.setLayout( gl )
panel1.setLayout( BoxLayout( panel1,BoxLayout.Y_AXIS ) )

panel1.add( JLabel('Replace each instance where the name is used with the new name.  Global/Local context is not supported.') )

panel.add( JLabel('Old Symbol:') )
oldtf= JTextField(text=var)
oldtf.editable=False
panel.add( oldtf )
panel.add( JLabel('New Symbol:') )
newtf= JTextField(text=var)
panel.add( newtf )
panel1.add( panel )

def refactorVarRename( script, i, old, new ):
    oldLen= len(old)
    import org.python.core.parser
    from org.python.parser.ast import VisitorBase
    n= org.python.core.parser.parse(script, 'exec')
    nodes= []
    class VB( VisitorBase ):
        def traverse(self,sn):
            print '%04d: %s' % ( sn.beginLine, sn )
            sn.traverse(self);
        def unhandled_node(self,sn):
            return sn
        def visitName(self,n):
            if ( n.id==old ):
                nodes.append(n)
        def visitModule(self,n):
            print '%04d: %s MODULE' % ( n.beginLine, n )
        def visitFunctionDef(self,n):
            print '%04d: %s FUNCTIONDEF' % ( n.beginLine, n )
            
    vb= VB()
    for st in n.body:
        st.traverse(vb)
    for n in nodes[::-1]:
        root= editor.document.defaultRootElement
        if n.beginLine>0:
            i0= root.getElement(n.beginLine-1).startOffset
        else:
            i0= 0            
        i0= i0 + (n.beginColumn-1)
        script= script[0:i0] + new + script[(i0+oldLen):]
    return script
    
if ( JOptionPane.OK_OPTION==JOptionPane.showConfirmDialog( getApplication(), panel1, 'rename variable', JOptionPane.OK_CANCEL_OPTION ) ):
    newn= newtf.text
    script1= refactorVarRename( script, editor.getCaretPosition(), var, newn )
    if var!=newn:
        editor.setText( script1 )
    
    
